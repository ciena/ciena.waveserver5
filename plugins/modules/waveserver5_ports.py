#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2023 Ciena
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for waveserver5_ports
"""

from __future__ import absolute_import, division, print_function

__metaclass__ = type

ANSIBLE_METADATA = {"metadata_version": "1.1", "status": ["preview"], "supported_by": "network"}

DOCUMENTATION = """
---
module: waveserver5_port
version_added: 1.1.0
short_description: Waveserver Port configuration data and operational data.
description: Waveserver Port configuration data and operational data.
author:
  - Jeff Groom (@jgroom33)
  - Galo Ertola (@perrary)
requirements:
  - ncclient (>=v0.6.4)
  - xmltodict (>=0.12.0)
options:
  config:
    description: Configuration and operational data for the port.
    suboptions:
      channels:
        description: List of ODU4 channels within the parent OTU port object.
        suboptions:
          channel_id:
            description:
              Channel number or ODU4 tributary number within the parent
              OTU port object. Key value for the channels list.
            required: true
            type: int
          id:
            description: Channel identification attributes.
            suboptions:
              label:
                description: The user-specified label string for this channel object.
                required: true
                type: str
            type: dict
          properties:
            description: Channel properties.
            suboptions:
              odu_sd_threshold:
                description: ODU4 Signal Degrade threshold value.
                required: true
                type: str
              trace:
                description: ODU4 path trace attributes for this channel.
                suboptions:
                  exp_dapi:
                    description:
                      The expected destination access point identifier
                      (DAPI) portion of the received trace string, up to 15 characters,
                      excluding the first byte in the TTI DAPI overhead, which is
                      implicitly always null.
                    required: true
                    type: str
                  exp_oper:
                    description:
                      The expected operator-specific portion of the received
                      trace string, up to 32 characters.
                    required: true
                    type: str
                  exp_sapi:
                    description:
                      The expected source access point identifier (SAPI)
                      portion of the received trace string, up to 15 characters,
                      excluding the first byte in the TTI SAPI overhead, which is
                      implicitly always null.
                    required: true
                    type: str
                  mismatch_fail_mode:
                    choices:
                      - none
                      - alarm-only
                      - squelch-traffic
                    description:
                      The trail trace identifier (TTI) mismatch failure
                      mode. When TTI mismatch condition occurs, this indicates the
                      consequent action taken, e.g. whether or not to raise an alarm.
                    required: true
                    type: str
                  mismatch_mode:
                    choices:
                      - operator-only
                      - sapi
                      - dapi
                      - sapi-and-dapi
                    description:
                      The trail trace identifier (TTI) mismatch mode,
                      indicating which fields of the TTI overhead are used for trace
                      mismatch detection.
                    required: true
                    type: str
                  tx_dapi:
                    description:
                      The destination access point identifier (DAPI)
                      portion of the transmitted trace string, up to 15 characters,
                      excluding the first byte in the TTI DAPI overhead, which is
                      implicitly always null.
                    required: true
                    type: str
                  tx_oper:
                    description:
                      The operator-specific portion of the transmitted
                      trace string, up to 32 characters. Ignored if tx-oper-mode
                      is 'automatic'.
                    required: true
                    type: str
                  tx_oper_mode:
                    choices:
                      - manual
                      - automatic
                    description:
                      Specifies whether to allow manual provisioning
                      of the transmitted TTI string, or let the system assign this
                      value automatically based on a pre-defined format.
                    required: true
                    type: str
                  tx_sapi:
                    description:
                      The source access point identifier (SAPI) portion
                      of the transmitted trace string, up to 15 characters, excluding
                      the first byte in the TTI SAPI overhead, which is implicitly
                      always null.
                    required: true
                    type: str
                type: dict
            type: dict
          state:
            description: Channel administrative and operational states.
            suboptions:
              admin_state:
                choices:
                  - disabled
                  - enabled
                description: The configured administrative state of the channel.
                required: true
                type: str
            type: dict
        type: list
      id:
        description: Port identification attributes.
        suboptions:
          label:
            description: The user-specified label string for this port interface.
            required: true
            type: str
          type:
            choices:
              - unknown
              - ethernet
              - otn
              - OTUk
              - OTUCn
              - OTUCn-Flex
            description: The port interface type.
            required: true
            type: str
        type: dict
      port_id:
        description:
          Unique, access identifier string of the port in '<slot>-<port>'
          format.
        required: true
        type: str
      properties:
        description: Port properties.
        suboptions:
          connection_peer:
            description:
              Port connection peer list. Indicates the client/line port/channel
              that may be connected to this line/client port. For certain client
              ports, the connection state is user-configurable or can be system
              assigned on port creation based on bandwidth availability. For other
              ports, the connection state is fixed and cannot be manually configured.
            suboptions:
              peer_id:
                description:
                  Specifies the client/line connection information for
                  the port or channel. Client ports can be connected to a line-side
                  channel or port. Line ports can be connected to a client side
                  port. Line channels can be connected to one or more client ports.
                  The connection mappings are static and provided by the system
                  based on XCVR configuration.
                required: true
                type: str
            type: list
          connection_state:
            choices:
              - disabled
              - enabled
            description:
              Specifies whether the line-side bandwidth is allocated
              for the connection between this client port and its connection peer.
              For most client port types, this is enabled by default and cannot
              be disabled. For certain client ports that can share line-side bandwidth
              with other client ports (such as on MOTR-AGG modules), the connection
              state can be manually configured by the user in order to assign or
              release the line-side bandwidth to the desired client. On the line-side,
              the connection state is read-only.
            required: true
            type: str
          ethernet:
            description: Ethernet-specific properties.
            suboptions:
              conditioning_holdoff:
                description:
                  Number of milliseconds to delay Egress UNI port consequent
                  action for an EPL service.
                required: true
                type: int
              conditioning_type:
                choices:
                  - none
                  - laser-off
                  - ethernet
                  - otn
                  - protocol-specific
                description:
                  Egress UNI port consequent action for an EPL service
                  to be applied on a far-end ingress UNI failure or network failure.
                  Supported values are 'none', 'laser-off', and 'ethernet'.
                required: true
                type: str
            type: dict
          loopback:
            choices:
              - disabled
              - rx
              - tx
            description:
              Port PHY layer loopback. RX loopback is a loopback forwarding
              ingress traffic from RX port directly to TX port. TX loopback is a
              loopback forwarding egress traffic from TX port directly to RX port,
              TX loopback is not supported in I-NNI ports. The RX/TX loopback can
              only be enabled when the port admin-state is disabled. Enable an RX/TX
              loopback shall fail when the port has its admin-state enabled. Users
              shall be able to disable the xcvr/ptp when its child port loopback
              enabled. Enable xcvr/ptp shall not enable its child port with loopback
              enabled. A port shall has its operational state rx loopback when rx
              loopback is enabled, and tx loopback when tx loopback is enabled.
            required: true
            type: str
          otn:
            description: OTN-specific properties.
            suboptions:
              conditioning_type:
                choices:
                  - none
                  - laser-off
                  - ethernet
                  - otn
                  - protocol-specific
                description:
                  Conditioning type for OTN ports. Supported values are
                  'laser-off' and 'otn'.
                required: true
                type: str
              odu_sd_threshold:
                description:
                  ODUk Signal Degrade threshold value, e.g. '1E-05' to
                  '1E-09'.
                required: true
                type: str
              odu_termination:
                choices:
                  - terminated
                  - passthrough
                description: ODUk termination mode.
                required: true
                type: str
              otu_sd_threshold:
                description:
                  OTU Signal Degrade threshold value, e.g. '1E-06' to
                  '1E-09'.
                required: true
                type: str
              trace:
                description: OTN port trace attributes
                suboptions:
                  path:
                    description: ODUk path trace attributes for this port.
                    suboptions:
                      exp_dapi:
                        description:
                          The expected destination access point identifier
                          (DAPI) portion of the received trace string, up to 15
                          characters, excluding the first byte in the TTI DAPI overhead,
                          which is implicitly always null.
                        required: true
                        type: str
                      exp_oper:
                        description:
                          The expected operator-specific portion of the
                          received trace string, up to 32 characters.
                        required: true
                        type: str
                      exp_sapi:
                        description:
                          The expected source access point identifier
                          (SAPI) portion of the received trace string, up to 15
                          characters, excluding the first byte in the TTI SAPI overhead,
                          which is implicitly always null.
                        required: true
                        type: str
                      mismatch_fail_mode:
                        choices:
                          - none
                          - alarm-only
                          - squelch-traffic
                        description:
                          The trail trace identifier (TTI) mismatch failure
                          mode. When TTI mismatch condition occurs, this indicates
                          the consequent action taken, e.g. whether or not to raise
                          an alarm.
                        required: true
                        type: str
                      mismatch_mode:
                        choices:
                          - operator-only
                          - sapi
                          - dapi
                          - sapi-and-dapi
                        description:
                          The trail trace identifier (TTI) mismatch mode,
                          indicating which fields of the TTI overhead are used for
                          trace mismatch detection.
                        required: true
                        type: str
                      tx_dapi:
                        description:
                          The destination access point identifier (DAPI)
                          portion of the transmitted trace string, up to 15 characters,
                          excluding the first byte in the TTI DAPI overhead, which
                          is implicitly always null.
                        required: true
                        type: str
                      tx_oper:
                        description:
                          The operator-specific portion of the transmitted
                          trace string, up to 32 characters. Ignored if tx-oper-mode
                          is 'automatic'.
                        required: true
                        type: str
                      tx_oper_mode:
                        choices:
                          - manual
                          - automatic
                        description:
                          Specifies whether to allow manual provisioning
                          of the transmitted TTI string, or let the system assign
                          this value automatically based on a pre-defined format.
                        required: true
                        type: str
                      tx_sapi:
                        description:
                          The source access point identifier (SAPI) portion
                          of the transmitted trace string, up to 15 characters,
                          excluding the first byte in the TTI SAPI overhead, which
                          is implicitly always null.
                        required: true
                        type: str
                    type: dict
                  section:
                    description: OTUk section trace attributes for this port.
                    suboptions:
                      exp_dapi:
                        description:
                          The expected destination access point identifier
                          (DAPI) portion of the received trace string, up to 15
                          characters, excluding the first byte in the TTI DAPI overhead,
                          which is implicitly always null.
                        required: true
                        type: str
                      exp_oper:
                        description:
                          The expected operator-specific portion of the
                          received trace string, up to 32 characters.
                        required: true
                        type: str
                      exp_sapi:
                        description:
                          The expected source access point identifier
                          (SAPI) portion of the received trace string, up to 15
                          characters, excluding the first byte in the TTI SAPI overhead,
                          which is implicitly always null.
                        required: true
                        type: str
                      mismatch_fail_mode:
                        choices:
                          - none
                          - alarm-only
                          - squelch-traffic
                        description:
                          The trail trace identifier (TTI) mismatch failure
                          mode. When TTI mismatch condition occurs, this indicates
                          the consequent action taken, e.g. whether or not to raise
                          an alarm.
                        required: true
                        type: str
                      mismatch_mode:
                        choices:
                          - operator-only
                          - sapi
                          - dapi
                          - sapi-and-dapi
                        description:
                          The trail trace identifier (TTI) mismatch mode,
                          indicating which fields of the TTI overhead are used for
                          trace mismatch detection.
                        required: true
                        type: str
                      tx_dapi:
                        description:
                          The destination access point identifier (DAPI)
                          portion of the transmitted trace string, up to 15 characters,
                          excluding the first byte in the TTI DAPI overhead, which
                          is implicitly always null.
                        required: true
                        type: str
                      tx_oper:
                        description:
                          The operator-specific portion of the transmitted
                          trace string, up to 32 characters. Ignored if tx-oper-mode
                          is 'automatic'.
                        required: true
                        type: str
                      tx_oper_mode:
                        choices:
                          - manual
                          - automatic
                        description:
                          Specifies whether to allow manual provisioning
                          of the transmitted TTI string, or let the system assign
                          this value automatically based on a pre-defined format.
                        required: true
                        type: str
                      tx_sapi:
                        description:
                          The source access point identifier (SAPI) portion
                          of the transmitted trace string, up to 15 characters,
                          excluding the first byte in the TTI SAPI overhead, which
                          is implicitly always null.
                        required: true
                        type: str
                    type: dict
                type: dict
            type: dict
        type: dict
      state:
        description: Port administrative and operational states.
        suboptions:
          admin_state:
            choices:
              - enabled
              - disabled
            description: The configured administrative state of the port.
            required: true
            type: str
        type: dict
    type: list
  state:
    choices:
      - gathered
      - merged
      - overridden
    default: merged
    description:
      - The state the configuration should be left in
    type: str
"""
EXAMPLES = """
# Using merged

- name: Configure port
  ciena.waveserver5.waveserver5_port:
    config:
      - port_id: 7/1
        state:
          admin_state: disabled
    state: merged


# Using overridden

- name: Configure port
  ciena.waveserver5.waveserver5_port:
    config:
      - port_id: 7/1
        state:
          admin_state: disabled
    state: overridden


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
xml:
  description: The set of xml commands pushed to the remote device.
  returned: always
  type: list
  sample: ['<system xmlns="http://openconfig.net/yang/system"><config><hostname>foo</hostname></config></system>']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.ciena.waveserver5.plugins.module_utils.network.waveserver5.argspec.ports.ports import (
    PortsArgs,
)
from ansible_collections.ciena.waveserver5.plugins.module_utils.network.waveserver5.config.ports.ports import (
    Ports,
)


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=PortsArgs.argument_spec, supports_check_mode=True)

    result = Ports(module).execute_module()
    module.exit_json(**result)


if __name__ == "__main__":
    main()
