#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2023 Ciena
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for waveserver5_system
"""

from __future__ import absolute_import, division, print_function

__metaclass__ = type

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "network",
}

DOCUMENTATION = """
---
module: system
version_added: 2.9
short_description: Waveserver System configuration data and operational data.
description: Waveserver System configuration data and operational data.
author: jgroom@ciena.com
requirements:
  - ncclient (>=v0.6.4)
  - xmltodict (>=0.12.0)
options:
  config:
    description: A dictionary of system options
    type: dict
    suboptions:
      config:
        description: Waveserver system host name attributes.
        suboptions:
          hostname:
            description: User configured host name.
            required: true
            type: str
        type: dict

  state:
    choices:
    - merged
    - overridden
    - deleted
    default: merged
    description:
    - The state the configuration should be left in
    type: str
"""
EXAMPLES = """
# Using merged

- name: Configure classifier
  ciena.saos10.saos10_classifiers:
    config:
      - name: untagged
        filter-entry:
          - filter-parameter: vtag-stack
            untagged-exclude-priority-tagged: false
      - name: foo-100
        filter-entry:
          - filter-parameter: vtag-stack
            vtags:
              - tag: 1
                vlan-id: 100
    state: merged


# Using overridden

- name: Configure classifier
  ciena.saos10.saos10_classifiers:
    config:
      - name: untagged
        filter-entry:
          - filter-parameter: vtag-stack
            untagged-exclude-priority-tagged: false
      - name: foo-100
        filter-entry:
          - filter-parameter: vtag-stack
            vtags:
              - tag: 1
                vlan-id: 100
    state: overridden


# Using deleted

- name: Delete classifier
  ciena.saos10.saos10_classifiers:
    config:
      - name: untagged
      - name: foo-100
    state: deleted


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
xml:
  description: The set of xml commands pushed to the remote device.
  returned: always
  type: list
  sample: ['<system xmlns="http://openconfig.net/yang/system"><config><hostname>foo</hostname></config></system>']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.ciena.waveserver5.plugins.module_utils.network.waveserver5.argspec.system.system import (
    SystemArgs,
)
from ansible_collections.ciena.waveserver5.plugins.module_utils.network.waveserver5.config.system.system import (
    System,
)


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(
        argument_spec=SystemArgs.argument_spec, supports_check_mode=True
    )

    result = System(module).execute_module()
    module.exit_json(**result)


if __name__ == "__main__":
    main()
